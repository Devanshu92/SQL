/*
Given a Weather table, write a SQL query to find all Ids with higher temperature compared to its previous (yesterday's) dates.

+---------+------------------+------------------+
| Id(INT) | RecordDate(DATE) | Temperature(INT) |
+---------+------------------+------------------+
| 1 | 2015-01-01 | 10 |
| 2 | 2015-01-02 | 25 |
| 3 | 2015-01-03 | 20 |
| 4 | 2015-01-04 | 30 |
+---------+------------------+------------------+
For example, return the following Ids for the above Weather table:
+----+
| Id |
+----+
| 2 |
| 4 |
*/

Solution - 
DROP TABLE IF EXISTS WEATHER;
CREATE TABLE WEATHER
(
ID  INTEGER,
RECORD_DATE  DATE,
TEMP  INT
);

INSERT INTO WEATHER VALUES
(1,'2015-01-01',10),
(2,'2015-01-02',25),
(3,'2015-01-03',20),
(4,'2015-01-04',30);

SELECT
ID
FROM 
(
SELECT 
ID,RECORD_DATE,TEMP,LAG(TEMP,1) OVER(ORDER BY ID) AS PRV_TEMP
FROM WEATHER
)
WHERE 
TEMP > PRV_TEMP
ORDER BY ID ASC